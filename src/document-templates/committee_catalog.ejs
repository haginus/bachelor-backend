<% function gradeAverageString(grade) {
    if(grade == null) {
        return committee.finalGrades ? 'ABSENT' : '';
    }
    let gradeTwoDecimals = grade.toFixed(2); // grade is of format x.yz
    let supraunitaryPart = parseInt(grade); // x
    let subunitaryPart = gradeTwoDecimals.split('.')[1]; // yz
    let result = gradeTwoDecimals.replace('.', ',') + ' (';
    switch (supraunitaryPart) {
        case 1:
            result += 'unu';
            break;
        case 2:
            result += 'doi';
            break;
        case 3:
            result += 'trei';
            break;
        case 4:
            result += 'patru';
            break;
        case 5:
            result += 'cinci';
            break;
        case 6:
            result += 'șase';
            break;
        case 7:
            result += 'șapte';
            break;
        case 8:
            result += 'opt';
            break;
        case 9:
            result += 'nouă';
            break;
        case 10:
        default:
            result += 'zece';
            break;
    }
    if(subunitaryPart != '00') {
        result += ` ${subunitaryPart}%`;
    }
    result += ')';
    return result;
} %> 

<html>
    <head>
        <title>Catalog examen de finalizare</title>
    </head>
    <body>
        <% for(let i = 0; i < paperGroups.length; i++) {
            let group = paperGroups[i];
            let studyYears = parseInt(group[0].student.specialization.studyYears);
            let creditNumber = 60 * studyYears;
            let studyDurationString = `${studyYears} ani (${studyYears * 2} semestre)`;
            let paperType = group[0].type;
            let domainType = group[0].student.domain.type;
            let domainTypeString = domainType == 'bachelor' ? 'licență' : (domainType == 'master' ? 'disertație' : '');
            const PAPER_TYPES = {
                master: 'disertație',
                bachelor: 'licență',
                diploma: 'diplomă',
            }
            let paperTypeString = PAPER_TYPES[paperType];
            %>
            <div class="header-container">
                <p class="col">
                    UNIVERSITATEA DIN BUCUREȘTI <br>
                    Facultatea de Matematică și Informatică	<br>
                    Domeniul de <%= domainTypeString %>: <%= group[0].student.domain.name %> <br>
                    Programul de studii/specializarea: <%= group[0].student.specialization.name %> <br>
                    Durata studiilor: <%= studyDurationString %> <br>
                    Număr credite: <%= creditNumber %> <br>
                    Forma de învățământ: <%= group[0].student.studyForm.toUpperCase() %> <br>
                    Promoția: <%= group[0].student.promotion %> 
                </p>
                <p class="col right">
                    Examen de <%= paperTypeString %><br>
                    Sesiunea <%= sessionSettings.sessionName.toUpperCase() %><br>
                    Credite <%= paperTypeString %> - 10
                </p>
            </div>

            <h1>
                CATALOG EXAMEN DE <%= paperTypeString.toUpperCase() %> <br>
                Prezentarea și susținerea lucrării de <%= paperTypeString %>
            </h1>
            <table>
                <tr>
                    <th rowspan="2">Nr. crt.</th>
                    <th rowspan="2">Numele, inițiala tatălui și prenumele absolventului</th>
                    <th rowspan="2">Titlul lucrării de <%= paperTypeString %> și profesorul coordonator</th>
                    <% for(let i = 0; i < committee.members.length; i++) {
                        let member = committee.members[i];
                        if(member.committeeMember.role == 'secretary') continue;
                    %>
                        <th class="upper" colspan="2"><%= member.user.lastName %> <%= member.user.firstName %></th>
                    <% } %>
                        <th rowspan="2">Media</th>
                </tr>
                <tr>
                    <% for(let i = 0; i < committee.members.length; i++) {
                        let member = committee.members[i];
                        if(member.committeeMember.role == 'secretary') continue;
                    %>
                        <th class="grade">Notă pentru lucrare</th>
                        <th class="grade">Notă pentru susținerea lucrării</th>
                    <% } %>
                </tr>
                <% for(let i = 0; i < group.length; i++) {
                    let paper = group[i];
                %>
                    <tr class="paper-row">
                        <td><%= i + 1 %>.</td>
                        <td class="upper">
                            <%= paper.student.user.lastName %>
                            <%= paper.student.studentExtraDatum?.parentInitial %>
                            <%= paper.student.user.firstName %>
                        </td>
                        <td class="upper"><%= paper.title %> – <%= paper.teacher.user.lastName %> <%= paper.teacher.user.firstName %></td>
                        <% for(let i = 0; i < committee.members.length; i++) {
                            let member = committee.members[i];
                            if(member.committeeMember.role == 'secretary') continue;
                            let grade = paper.grades.find(grade => grade.teacherId == member.id);
                            let forPaper, forPresentation;
                            if(grade) {
                                forPaper = grade.forPaper;
                                forPresentation = grade.forPresentation;
                            } else {
                                forPaper = committee.finalGrades ? '-' : '';
                                forPresentation = committee.finalGrades ? '-' : '';
                            }
                        %>
                            <td class="grade"><%= forPaper %></td>
                            <td class="grade"><%= forPresentation %></td>
                        <% } %>
                        <td><%= gradeAverageString(paper.gradeAverage) %></td>
                    </tr>
                <% } %>
            </table>
            <div class="page-break"></div>
        <% } %>
    </body>

    <style>
        html {
            width: 29.7cm;
            font-family: 'Liberation Serif', 'Times New Roman', Times, serif;
        }
        body {
            margin: 0px;
            padding: 0 1cm;
            width: 100%;
            box-sizing: border-box;
        }

        .page-break {
            page-break-after: always;
        }

        .upper {
            text-transform: uppercase;
        }

        .header-container,
        .footer-container {
            display: flex;
        }

        .header-container {
            font-weight: bold;
            align-items: flex-end;
        }

        .header-container .col,
        .footer-container .col {
            flex: 1;
        }

        .footer-container {
            padding-top: 0.5cm;
        }

        .footer-container .col {
            text-align: center;
            font-size: 12pt;
        }

        .col.right {
            text-align: right;
        }

        .col.center {
            text-align: center;
        }

        h1 {
            font-size: 18pt;
            text-align: center;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            font-size: 10pt;
        }

        td {
            text-align: center;
        }

        th {
            background-color: #bdbdbd;
        }

        @media print {
            th {
                background-color: #bdbdbd!important;
            }
        }

        table, th, td {
            border: 1px solid black;
        }

        table { 
            page-break-inside: auto
        }

        tr {
            page-break-inside: avoid;
            page-break-after: auto
        }

        .paper-row td {
            height: 36pt;
        }

        tr .grade {
            width: 6%;
        }

    </style>
</html>